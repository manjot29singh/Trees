import java.util.ArrayList;

public class l003gt{
    //GENERIC TREE
    public static class Node{
        int data=0;
        ArrayList<Node> childs = new ArrayList<>();

        Node(int data){
            this.data=data;
        }

    }
    public static int size(Node node){
    int sizee=0;
    for(Node child : node.childs){//for every child node in childs arraylist
        sizee= sizee + size(child); //size is equal to size + size(child);
    }
    return sizee + 1 ; //+1 for the node's size.
    }
    public static int height(Node node){
        int h = -1;
        for(Node child : node.childs){
            h = Math.max(h,height(child));
        }
        return h+1;
    }
    public static int maximum(Node node){
        int max= -(int)1e9;
        for(Node child : node.childs){
            max= Math.max(max,maximum(child));
        }
        return Math.max(max,node.data);
    }
     public static int minimum(Node node){
        int min = node.data;
        for(Node child : node.childs){
            min= Math.min(min,minimum(child));
        }
        return min;
    }
    public static boolean find(Node node,int data){//198:10
        boolean res = node.data== data;
        for(Node child : node.childs){
            res = res || find(child,data);
        }
        return res;
    }
    
}
